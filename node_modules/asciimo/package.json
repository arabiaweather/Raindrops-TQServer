{
  "name": "asciimo",
  "description": "create awesome ascii art with javascript! works in node.js or the browser.",
  "version": "0.3.1",
  "repository": {
    "type": "git",
    "url": "http://github.com/Marak/asciimo.git"
  },
  "author": {
    "name": "Marak Squires",
    "email": "marak.squires@gmail.com"
  },
  "contributors": [
    {
      "name": "Justin Lilly"
    }
  ],
  "keywords": [
    "ascii",
    "text",
    "art"
  ],
  "dependencies": {
    "colors": ">= 0.3.0"
  },
  "bin": {
    "asciimo": "./bin/asciimo"
  },
  "main": "lib/asciimo",
  "engines": {
    "node": ">= 0.1.98"
  },
  "scripts": {
    "start": "node server.js"
  },
  "readme": "<table>\n  <tr valign = \"middle\">\n    <td><img src = \"http://imgur.com/kmbjB.png\"/></td>\n    <td>\n      <br/>\n      <h1>greetings, i am asciimo</h1>\n      <h1>i create awesome ascii art with javascript!</h1>\n      <h1>i work in node.js and the browser</h1>\n    </td>    \n  </tr>\n</table>\n\n<div align = \"center\"><img src = \"http://i.imgur.com/CDKZc.png\" border = \"0\"/></div>\n### v0.3.1 online demo @ <a href = \"http://asciimo.com\" target = \"_blank\">http://asciimo.com</a>\n### font files are FIGlet .flf files <a href = \"http://en.wikipedia.org/wiki/FIGlet\">http://en.wikipedia.org/wiki/FIGlet</a>\n## USAGE\n\n### command-line -\n          asciimo \"roffles\" Cybermedium\n\n### node.js - \n          var sys = require('sys');\n          var asciimo = require('./lib/asciimo').Figlet;\n          var colors = require('./lib/colors'); // add colors for fun\n\n          // pick the font file\n          var font = 'banner';\n          // set text we are writeing to turn into leet ascii art\n          var text = \"hello, i am asciimo\";\n\n          asciimo.write(text, font, function(art){\n            sys.puts(art.magenta);\n            var anotherFont = 'binary';\n            var moreText = \"i turn text into leet ascii art ^_^.\";\n\n            asciimo.write(moreText, anotherFont, function(art){\n              sys.puts(art.red);\n              var anotherFont = 'Colossal';\n              var moreText = \"400+ fonts supported\";\n\n              asciimo.write(moreText, anotherFont, function(art){\n                sys.puts(art.green);  \n                var anotherFont = 'tinker-toy';\n                var moreText = \"Marak Squires 2010\";\n\n                asciimo.write(moreText, anotherFont, function(art){\n                  sys.puts(art.yellow);  \n                  sys.puts('if you can\\'t see the text try making your console larger'.red.underline)\n                });\n\n              });\n\n            });\n\n          });\n\n### browser - \n\n          // the current browser demo requires jQuery. you could easily make it work without jQuery.\n          // we'll have to figure out a smarter way to make this library work dual-sided. \n          // also, i haven't included the DOM elements here so you really should just check out the index.html file\n\n          <script type=\"text/javascript\" src=\"./lib/asciimo.js\"></script>\n\n          <!-- fonts.js doesn't contain the fonts, just the font names. fonts are located in /asciimo/fonts/   -->\n          <script type=\"text/javascript\" src=\"./lib/fonts.js\"></script>\n\n          <!-- jquery not required, just use this this demo page -->\n          <script type=\"text/javascript\" src=\"./lib/jquery.js\"></script>\n\n\n          <script type=\"text/javascript\">\n\n          // not used, could be implemented, maybe AJAX browser cache is good enough? do some research!\n          var fontCache = {};\n\n          $(document).ready(function(){\n\n            // populate the select box\n            for(var i = 0; i<Figlet.fontList.length; i++){\n              var fontTitle = Figlet.fontList[i].replace('.flf','').replace('.aol',''); // remove the file extentions for the title\n              $('#fontSelector').append('<option value = \"'+Figlet.fontList[i]+'\">'+fontTitle+'</option>');\n            }\n    \n            // protip : understanding the following two blocks of code will make you jQuery ninja\n    \n            /***** NAMED EVENTS *****/\n\n              // change the font and load a new font via jQuery async AJAX request\n              $(document).bind('##CHANGE_FONT##', function(e, data){\n                Figlet.loadFont(data.fontName, function(rsp){\n                  $(document).trigger('##RENDER_ASCII_ART##', {font:rsp}); // the font has changed, lets call the render ascii art event\n                });\n              });\n  \n              $(document).bind('##RENDER_ASCII_ART##', function(e){\n                Figlet.write($('#theCode').val(), $('#fontSelector').val(), function(str) {\n                  debug.log('wrote');\n            \t\t  $('#asciiArt').html('<pre>' + str + '</pre>');\n            \t\t});\n              });\n\n            /**** END NAMED EVENTS ****/\n\n            /**** BIND UI EVENTS ****/\n\n              // select box change\n              $('#fontSelector').change(function(){\n                $(document).trigger('##CHANGE_FONT##', {\"fontName\":$(this).val()})\n              });\n    \n              // you would think jQuery.change() would cover the keypress event on select boxes? \n              $(\"#fontSelector\").keypress(function (){\n                $(document).trigger('##CHANGE_FONT##', {\"fontName\":$(this).val()})\n              });\n\n              // keyup on textarea\n              $('#theCode').keyup(function(e){\n                $(document).trigger('##RENDER_ASCII_ART##');\n              });\n    \n              $('#run').click(function(e){\n                $(document).trigger('##RENDER_ASCII_ART##');\n              });\n\n            /**** END UI BIND EVENTS ****/\n\n            // little bit of a onReady hack. i'll fix the API a bit so this can be done better\n            $(document).trigger('##CHANGE_FONT##', {\"fontName\":'Doh'});\n            $('#fontSelector').val('Doh');\n\n          });\n        </script>\n\n\n## Authors\n#### Marak Squires, \n####AWESOME FIGlet parser by <a href = \"http://github.com/scottgonzalez/figlet-js\">Scott Gonzalez</a>\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/Marak/asciimo/issues"
  },
  "_id": "asciimo@0.3.1",
  "dist": {
    "shasum": "f8827e045f835d22d18fb9b8b790615c8297d146"
  },
  "_from": "asciimo@",
  "_resolved": "https://registry.npmjs.org/asciimo/-/asciimo-0.3.1.tgz"
}
